Que : Find Duplicate File in System
Link : https://leetcode.com/problems/find-duplicate-file-in-system/

Sol:

//use stringstream method to fetch a desired word, and hasp map to check the dulpicate
class Solution {
public:
    vector<vector<string>> findDuplicate(vector<string>& paths) {
        unordered_map<string, vector<string>>ump;      //map store content as a key, and director and file name as a value in a 1d vector
        
        for(auto path : paths){
            stringstream str(path);      //stored one string path in stringstream
            
            string dir;                 //to store directoy name
            string file;                //to store file name
            
            getline(str, dir, ' ');     // as from starting to first space is the directory name so fetch that
            
            //there can be multiple files in one directory so run the while loop
            while(getline(str, file, ' ')){       //after first space, remaining all the spaces seperate the files in current string
                
                //content is between the (), so find the index of ( and distence between the () to find the length of content
                int posOfContent = file.find('(')+1;
                int lengthOfContent = file.find(')') - file.find('(') -1;
                string content = file.substr(posOfContent, lengthOfContent);
                
                //as a key we need to store in the form of "dir/file"
                string currFileName = file.substr(0, file.find('('));
                string name = dir + '/' + currFileName;
                
                //store the the content and name
                ump[content].push_back(name);
            }
        }
        
        vector<vector<string>>ans;
        
        for(auto x : ump){
            
            if(x.second.size() > 1){      //if any content has two files then only store in the result
                ans.push_back(x.second);
            }
        }
        
        return ans;
    }
};
