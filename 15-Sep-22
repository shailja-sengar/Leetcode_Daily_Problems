Que Link: Find Original Array From Doubled Array, https://leetcode.com/problems/find-original-array-from-doubled-array/
Sol:

class Solution {
public:
    vector<int> findOriginalArray(vector<int>& changed) {
        vector<int>original;
        int size = changed.size();
        if(size % 2 != 0) return original;
        unordered_map<int, int>ump;
        
        //so that, smaller element can remove first
        sort(changed.begin(), changed.end());
        
        for(auto i : changed){
            ump[i]++;
        }
        
        for(int i=0; i<size; i++){
            if(ump[changed[i]] == 0) continue;  //current element should be doubled value, it is already removed
            if(ump[changed[i]*2] == 0) return {};     //double value is not present in map, so return empty
            original.push_back(changed[i]);
            ump[changed[i]]--;    //decrease the original value's freq
            ump[changed[i]*2]--;
        }
        
        return original;
    }
};
